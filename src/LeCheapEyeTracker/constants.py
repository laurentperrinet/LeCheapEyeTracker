#! /usr/bin/env python3
# -*- coding: utf-8 -*-
import cv2
face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

import base64, imageio

eye_image = imageio.imread(base64.b64decode("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"))[: ,:, ::-1] # HACK to put back in RGB


vertex = """
    attribute vec2 position;
    attribute vec2 textcoord;
    varying vec2 v_texcoord;
    void main()
    {
        gl_Position = vec4(position, 0.0, 1.0);
        v_texcoord = texcoord;
    }
"""

fragment = """
    uniform sampler2D texture;
    varying vec2 texcoord;
    void main()
    {
        gl_Fragcolor = texture2D(texture, v_texcoord);
    }
"""